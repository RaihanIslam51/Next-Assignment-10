{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raihan/Desktop/Learn/Next-Assignment-10/src/lib/mongodb.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst options = {};\r\nlet client;\r\nlet clientPromise;\r\n\r\nif (!uri) {\r\n  console.warn(\"⚠️ Warning: MONGODB_URI is not defined. Please check your .env.local or deployment settings.\");\r\n}\r\n\r\n// Use a global variable in development to prevent multiple connections\r\nif (process.env.NODE_ENV === \"development\") {\r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, options);\r\n    global._mongoClientPromise = client.connect();\r\n  }\r\n  clientPromise = global._mongoClientPromise;\r\n} else {\r\n  client = new MongoClient(uri, options);\r\n  clientPromise = client.connect();\r\n}\r\n\r\nexport default clientPromise;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AACjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,KAAK;IACR,QAAQ,IAAI,CAAC;AACf;AAEA,uEAAuE;AACvE,wCAA4C;IAC1C,IAAI,CAAC,yDAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,sHAAW,CAAC,KAAK;QAC9B,yDAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,yDAAO,mBAAmB;AAC5C;;uCAKe","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raihan/Desktop/Learn/Next-Assignment-10/src/app/products/ProductsList.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/products/ProductsList.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/products/ProductsList.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raihan/Desktop/Learn/Next-Assignment-10/src/app/products/ProductsList.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/products/ProductsList.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/products/ProductsList.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAiR,GAC9S,+CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raihan/Desktop/Learn/Next-Assignment-10/src/app/products/page.jsx"],"sourcesContent":["import clientPromise from \"@/lib/mongodb\";\r\nimport ProductsList from \"./ProductsList\";\r\n\r\nexport default async function ProductsPage() {\r\n  const client = await clientPromise;\r\n  const db = client.db(\"ProductApp\");\r\n\r\n  const products = await db\r\n    .collection(\"products\")\r\n    .find({})\r\n    .sort({ createdAt: -1 })\r\n    .toArray();\r\n\r\n  // Convert to plain JSON-serializable objects\r\n  const plainProducts = products.map((p) => ({\r\n    ...p,\r\n    _id: p._id.toString(),\r\n    createdAt: p.createdAt ? p.createdAt.toISOString() : null,\r\n    updatedAt: p.updatedAt ? p.updatedAt.toISOString() : null,\r\n  }));\r\n\r\n  return <ProductsList products={plainProducts} />;\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEe,eAAe;IAC5B,MAAM,SAAS,MAAM,gIAAa;IAClC,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,MAAM,WAAW,MAAM,GACpB,UAAU,CAAC,YACX,IAAI,CAAC,CAAC,GACN,IAAI,CAAC;QAAE,WAAW,CAAC;IAAE,GACrB,OAAO;IAEV,6CAA6C;IAC7C,MAAM,gBAAgB,SAAS,GAAG,CAAC,CAAC,IAAM,CAAC;YACzC,GAAG,CAAC;YACJ,KAAK,EAAE,GAAG,CAAC,QAAQ;YACnB,WAAW,EAAE,SAAS,GAAG,EAAE,SAAS,CAAC,WAAW,KAAK;YACrD,WAAW,EAAE,SAAS,GAAG,EAAE,SAAS,CAAC,WAAW,KAAK;QACvD,CAAC;IAED,qBAAO,8OAAC,kJAAY;QAAC,UAAU;;;;;;AACjC","debugId":null}}]
}